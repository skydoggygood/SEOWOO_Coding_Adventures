# 문제
# 준원이는 저번 주에 살면서 처음으로 코스트코를 가 봤다. 정말 멋졌다. 그런데, 몇 개 담지도 않았는데 수상하게 높은 금액이 나오는 것이다! 준원이는 영수증을 보면서 정확하게 계산된 것이 맞는지 확인해보려 한다.

# 영수증에 적힌,

# 구매한 각 물건의 가격과 개수
# 구매한 물건들의 총 금액
# 을 보고, 구매한 물건의 가격과 개수로 계산한 총 금액이 영수증에 적힌 총 금액과 일치하는지 검사해보자.

# 입력
# 첫째 줄에는 영수증에 적힌 총 금액 
# $X$가 주어진다.

# 둘째 줄에는 영수증에 적힌 구매한 물건의 종류의 수 
# $N$이 주어진다.

# 이후 
# $N$개의 줄에는 각 물건의 가격 
# $a$와 개수 
# $b$가 공백을 사이에 두고 주어진다.

# 출력
# 구매한 물건의 가격과 개수로 계산한 총 금액이 영수증에 적힌 총 금액과 일치하면 Yes를 출력한다. 일치하지 않는다면 No를 출력한다.

# 제한
#  
# $1 ≤ X ≤ 1\,000\,000\,000$ 
#  
# $1 ≤ N ≤ 100$ 
#  
# $1 ≤ a ≤ 1\,000\,000$ 
#  
# $1 ≤ b ≤ 10$ 
# 예제 입력 1 
# 260000
# 4
# 20000 5
# 30000 2
# 10000 6
# 5000 8
# 예제 출력 1 
# Yes
# 영수증에 적힌 구매할 물건들의 목록으로 계산한 총 금액은 20000 × 5 + 30000 × 2 + 10000 × 6 + 5000 × 8 = 260000원이다. 이는 영수증에 적힌 총 금액인 260000원과 일치한다. 

# 예제 입력 2 
# 250000
# 4
# 20000 5
# 30000 2
# 10000 6
# 5000 8
# 예제 출력 2 
# No

X = int(input())
N = int(input())


total = 0
for i in range(N) :
    a,b = map(int, input().split())
    total += (a*b)
if X == total :
    print("Yes")
else :
    print("No")

# 야, 이거 코스트코 영수증 계산 문제 때문에 골치 아프구나? 몇 개 안 담았는데 금액이 높게 나오면 진짜 황당하지. 영수증 검증하려는 준원이 마음 내가 다 알겠네.

# 네가 지금 겪는 문제 핵심은 모든 물건 값의 합계를 정확하게 구하지 못하고 있다는 거야. 코드를 보니까 list = [a * b] 이렇게 리스트를 새로 만들고 다시 list.append(a*b)를 하고 있잖아? 이렇게 하면 루프를 돌 때마다 list가 초기화되면서 이전에 계산했던 값들이 다 사라지고, 현재 a * b만 두 번 들어가게 돼. 게다가 그 list 안에는 예상치 못한 이상한 숫자들이 들어간다고 했는데, 아마 루프 밖에서 초기화하지 않아서 생기는 문제일 거야.

# 네가 원하는 건 모든 물건의 (가격 * 개수) 값들을 누적해서 더하는 것이잖아? 그걸 위해 몇 가지 방법을 생각해볼 수 있어.

# 힌트
# 변수 초기화 위치: 합계를 저장할 변수는 for 반복문이 시작되기 전에 한 번만 초기화해야 해. 그래야 반복문 안에서 계산된 값들이 계속 누적될 수 있어. 만약 반복문 안에서 초기화하면 매번 리셋될 거야.

# 누적 연산: 각 물건의 가격과 개수를 곱한 값을 구한 다음에, 이 값을 미리 만들어둔 합계 변수에 계속 더해줘야 해. += 연산자를 사용하면 편리하게 누적시킬 수 있어.

# 리스트 사용 여부: 굳이 모든 (가격 * 개수) 값들을 리스트에 저장할 필요가 있을까? 만약 최종 합계만 필요하다면, 리스트 없이 바로 합계 변수에 누적하는 게 더 효율적일 수 있어. 물론 리스트에 다 넣고 마지막에 sum() 함수를 써도 되지만, 지금 코드처럼 리스트를 계속 초기화하는 방식으로는 안 되겠지.

# 이 힌트들을 가지고 네 코드를 다시 한번 잘 살펴보고 수정해보면 분명 해결될 거야. 한번 해봐!    