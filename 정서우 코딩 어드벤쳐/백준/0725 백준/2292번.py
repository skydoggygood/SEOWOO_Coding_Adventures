# 2292번

# 문제


# 위의 그림과 같이 육각형으로 이루어진 벌집이 있다. 그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다. 숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오. 예를 들면, 13까지는 3개, 58까지는 5개를 지난다.

# 입력
# 첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.

# 출력
# 입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.

# 예제 입력 1 
# 13
# 예제 출력 1 
# 3

N = int(input())

count = 1
last_num = 1

while N > last_num:
    last_num += count * 6
    count+=1

print(count)


# 생각을 해보자 
# 굳이 그림으로 나타낼 필요 없음 --> 한층 한층을 리스트로 표현해서 층수를 표현하면 됨 
# 1번쨰 줄 = 1 1개 
# 2번째 줄 = 2,3,4,5,6,7 6개
# 3번째 줄 = 8,9,10,11,12,13,14,15,16,17,18,19 12개
# 4번째 줄 = 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37 18개

# 규칙을 보자 
# 1 -> 6 -> 12 -> 18 
# 1(6개 테두리) 1개
# 2(6개 테두리) 6개 
# 3(6개 테두리) 이전의 6개 + 6개 
# 4(6개 테두리) 이전의 12개 + 6개 
# 5 이전의 18개 + 6개 

# 이걸 식으로 나타내면 ?
# i = 1이면 1
# i = 2이면 ((i-1)*6) + 6
# i = 3이면 ((3-1)*6) + 6 

# 여기까진 됐고, 이제 내가 원의 맨 한가운데에서 밖으로 나가기 위해서 필요한 횟수를 구해야하는데... 
# 이건 중앙에서 시작해서 내가 원하는 번호가 몇번째 리스트에 있는지 카운팅 하면 되는거잖아 
